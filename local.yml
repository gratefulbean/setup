---

- hosts: localhost
  connection: local
  become: true

  tasks:
    - name: Ensure necessary groups exist with correct GIDs
      group:
        name: "{{ item.name }}"
        gid: "{{ item.gid | default(omit) }}"
        state: present
      loop:
        - { name: ansible }
        - { name: bean }
        - { name: devin, gid: 3000 }

    - name: Ensure necessary users exist
      user:
        name: "{{ item.name }}"
        uid: "{{ item.uid | default(omit) }}"
        group: "{{ item.group }}"
        groups: "{{ item.groups | default(omit) }}"
        state: present
        createhome: yes
        shell: /bin/bash
      loop:
        - { name: ansible, group: root, groups: [] }
        - { name: bean, group: bean, groups: [] }
        - { name: devin, group: devin, uid: 3000, groups: [] }

    - name: Manage authorized SSH keys
      authorized_key:
        user: "{{ item.user }}"
        key: "{{ item.key }}"
        state: "{{ item.state }}"
      loop:
        - { user: ansible, key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL7ZKCfGHSEDKqwD7MuL/8y0G2rxSyFESJwkcm17vcT8 ansible", state: present }
        - { user: devin, key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKFnKQ3jN447peX7LZL5jPiiEvWYm3pNDIUAu4eRtURj devin@acer-chromebook", state: present }
        - { user: bean, key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIx7pxPl9zOUCRwBoo9EfDT9Knx/ssU01FFftP6M21Kj bean@rivendell", state: absent }

    - name: Copy .bashrc files
      copy:
        src: files/bashrc
        dest: "/home/{{ item.user }}/.bashrc"
        owner: "{{ item.user }}"
        group: "{{ item.user }}"
        mode: "0644"
      loop:
        - { user: bean }
        - { user: devin }

    - name: Update SSH configuration
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?{{ item.key }}'
        line: "{{ item.line }}"
      loop:
        - { key: 'Port ', line: 'Port 22' }
        - { key: 'PermitRootLogin', line: 'PermitRootLogin no' }
        - { key: 'PubkeyAuthentication', line: 'PubkeyAuthentication yes' }
        - { key: 'PasswordAuthentication', line: 'PasswordAuthentication no' }
      notify: Restart SSH

    - name: add sudo priveleges file for bean
      tags: always
      become: yes
      copy:
        src: "files/{{ item.src }}"
        dest: "/etc/sudoers.d/{{ item.dest }}"
        owner: root
        group: root
        mode: "0640"
      loop:
        - { src: sudoer_bean, dest: bean }
        - { src: sudoer_ansible, dest: ansible }

